version: '3'
services:
  kong-dev:
    image: s4ni0r/kong-dev
    container_name: kong-dev
    entrypoint: tail -f /dev/null
    working_dir: /workspace/kong-plugin-kafka-log
    depends_on:
      - postgres
    volumes:
#      - ./kong:/kong
      - ./kong-plugin-kafka-log:/workspace/kong-plugin-kafka-log
    networks:
      kong-net:
        ipv4_address: 172.28.1.1

  cassandra:
    image: cassandra:3.9
    container_name: kong-tests-cassandra
    ports:
      - "9042:9042"
    networks:
      kong-net:
        ipv4_address: 172.28.1.2

  postgres:
    build: ./docker-images/postgres
    container_name: kong-tests-postgres
    command: postgres -c "config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - "$PWD/docker-images/postgres/postgres.conf:/etc/postgresql/postgresql.conf"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      kong-net:
        ipv4_address: 172.28.1.3

  redis:
    image: redis
    container_name: kong-tests-redis
    ports:
      - "6379:6379"
    networks:
      kong-net:
        ipv4_address: 172.28.1.4

  zookeeper:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      kong-net:
        ipv4_address: 172.28.1.5
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888


  kafka:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka
    ports:
      - "9092:9092"
    networks:
      kong-net:
        ipv4_address: 172.28.1.6
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://172.28.1.6:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

networks:
  kong-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16